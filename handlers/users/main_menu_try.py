from typing import Union

from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery, Message, message
from keyboards.inline.inkb_main_menu import main_menu_keyboard
from keyboards.inline.subscriptions_menu import categories_keyboard
from utils.db_api.db_comands import get_date_end, get_date_start, get_what_now

from loader import dp
import logging
from data import config

from datetime import datetime, timedelta



@dp.message_handler(commands=['–ú–µ–Ω—é', 'menu'], commands_prefix = ['‚†Ä','/'])
async def show_main_menu(message: types.Message):
    await main_menu_category(message)


async def main_menu_category(message: Union[CallbackQuery, Message], **kwargs):
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = main_menu_keyboard()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞ —Ç–∏–ø –∞–ø–¥–µ–π—Ç–∞. –ï—Å–ª–∏ Message - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if isinstance(message, Message):
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    
    # –ï—Å–ª–∏ CallbackQuery - –∏–∑–º–µ–Ω—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    elif isinstance(message, CallbackQuery):
        call = message
        await call.message.edit_reply_markup(markup)


@dp.callback_query_handler(text_contains="what_now")
async def show_what_now(call: types.CallbackQuery):

    await call.answer(cache_time=360)
    callback_data = call.data
    logging.info(f"{callback_data=}")

    tdate = datetime.now() + timedelta(hours=config.DELTA)

    # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è
    festival_start = get_date_start()
    festival_end = get_date_end()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—Å—è/–∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ª–∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å
    if tdate < festival_start:
        await call.message.answer("üòÅ –§–µ—Å—Ç–∏–≤–∞–ª—å –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è, \n–ó–∞–≥–ª—è–Ω–∏ —Å—é–¥–∞ 18 –∏—é–Ω—è!")
    elif tdate > festival_end:
        await call.message.answer("‚òπ –ö —Å–æ–∂–µ–ª–µ–Ω–∏—é, —Ñ–µ—Å—Ç–∏–≤–∞–ª—å —É–∂–µ –ø—Ä–æ—à–µ–ª.\n–£–≤–∏–¥–∏–º—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥—É! üòÅ")
    else:
        await call.message.answer(text='ü§ì –°–µ–π—á–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç ü§ì')
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö —Å–æ–±—ã—Ç–∏–π
        event_now_list = get_what_now(tdate)
        for event in event_now_list:
            await call.message.edit_text(text=event)  
    pass